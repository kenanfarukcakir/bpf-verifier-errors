
bpf_corrected.o:	file format elf64-bpf

Disassembly of section tracepoint/sched/sched_process_exec:

0000000000000000 <sched_process_exec>:
;     id = bpf_get_current_pid_tgid();
       0:	85 00 00 00 0e 00 00 00	call 14
;     pid = id >> 32;
       1:	bf 06 00 00 00 00 00 00	r6 = r0
       2:	77 06 00 00 20 00 00 00	r6 >>= 32
;     tid = (__u32)id;
       3:	67 00 00 00 20 00 00 00	r0 <<= 32
       4:	77 00 00 00 20 00 00 00	r0 >>= 32
;     if (pid != tid)
       5:	5d 06 11 00 00 00 00 00	if r6 != r0 goto +17 <LBB0_5>
;     e = bpf_ringbuf_reserve(&rb, sizeof(*e), 0);
       6:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
		0000000000000030:  R_BPF_64_64	rb
       8:	b7 02 00 00 08 00 00 00	r2 = 8
       9:	b7 03 00 00 00 00 00 00	r3 = 0
      10:	85 00 00 00 83 00 00 00	call 131
;     if (!e)
      11:	15 00 0b 00 00 00 00 00	if r0 == 0 goto +11 <LBB0_5>
;     if (pid % 2 == 0){
      12:	bf 61 00 00 00 00 00 00	r1 = r6
      13:	57 01 00 00 01 00 00 00	r1 &= 1
      14:	55 01 04 00 00 00 00 00	if r1 != 0 goto +4 <LBB0_4>
;         bpf_ringbuf_discard(e,0);
      15:	bf 01 00 00 00 00 00 00	r1 = r0
      16:	b7 02 00 00 00 00 00 00	r2 = 0
      17:	85 00 00 00 85 00 00 00	call 133
      18:	05 00 04 00 00 00 00 00	goto +4 <LBB0_5>

0000000000000098 <LBB0_4>:
;     e->pid = pid;
      19:	63 60 00 00 00 00 00 00	*(u32 *)(r0 + 0) = r6
;     bpf_ringbuf_submit(e, 0);
      20:	bf 01 00 00 00 00 00 00	r1 = r0
      21:	b7 02 00 00 00 00 00 00	r2 = 0
      22:	85 00 00 00 84 00 00 00	call 132

00000000000000b8 <LBB0_5>:
; }
      23:	b7 00 00 00 00 00 00 00	r0 = 0
      24:	95 00 00 00 00 00 00 00	exit
